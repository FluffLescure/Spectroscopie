global
function math(context) {
    return context.scopes.some(s => s.startsWith("meta.math"));
}

const vscode = require("vscode");
var editor=vscode.window.activeTextEditor
var document=editor.document

endglobal



snippet template "Basic template" b
\documentclass[11pt, openright]{book}

    % Cover Variables
    \newcommand{\ctoptitle}{}
    \newcommand{\ctitle}{Title}
    \newcommand{\cautor}{Author}
    \newcommand{\cdate}{day.month.year}
    \newcommand{\sectittle}{Second Title}


    % Header Variables
        \newcommand{\headRE}{Main Topic}
        \newcommand{\headLE}{\emph{\rightmark}}
        \newcommand{\footRE}{Lucas Lescure $-$ \cdate}
        \newcommand{\footLE}{\emph{\thepage}}

    % TOC Variables
        \newcommand{\toctitle}{Table of Content}
        
        \newcommand{\tocchapter}{Chapter}
        \newcommand{\toccount}{3}
  
    % Chapter Variables
        \newcommand{\chvar}{Chapter -}

\input{~/.config/latex-utils/common/style.tex}
\input{~/.config/latex-utils/common/math.tex}
\input{~/.config/latex-utils/common/header.tex}
\input{~/.config/latex-utils/common/toc.tex}

    % figure support
    \usepackage{import}
    \usepackage{xifthen}
    \pdfminorversion=7
    \usepackage{pdfpages}
    \usepackage{transparent}
    \newcommand{\incfig}[1]{%
            \def\svgwidth{\columnwidth}
            \import{./figures/}{#1.pdf_tex}
    }

    \pdfsuppresswarningpagegroup=1


\begin{document}
% Spacing
\input{~/.config/latex-utils/common/begin.tex}

% Cover
\input{~/.config/latex-utils/common/cover.tex}
    
\pagestyle{fancy}
    \newpage

    $0

\end{document}
endsnippet


snippet `(?<=^\s*)beg` "begin{} / end{}" bA
 \\begin{$1}
    $0
\\end{$1}
endsnippet


priority 100
context math(context)
snippet ... "ldots" iA
\ldots
endsnippet


snippet `(?<=^\s*)table` "Table environment" bAw
 \begin{table}[${1:ht!}]
    \centering
    \caption{${2:caption}}
    \label{tab:${3:label}}
    \begin{tabular}{${5:c}}
    $0${5/((?<=.)c|l|r)|./(?1: & )/g}
    \end{tabular}
\end{table}
endsnippet


snippet `(?<=^\s*)fig` "Figure environment" bA
 \begin{figure}[ht!]
    \centering
    \includegraphics[width=${2:0.6}\textwidth]{$3}
    \caption{${4:${VISUAL}}}
\end{figure}
endsnippet


snippet `(?<=^\s*)bode` "Bode plot" bA
\begin{figure}[ht!]
    \centering
    \caption{$1}
    \begin{tikzpicture}
        \begin{axis}[
                width=0.45\textwidth, height=0.35\textwidth,
                xmode=log, log x ticks with fixed point,
                axis x line=bottom, axis y line=left,
                grid=both, ymax=5, 
                xlabel= $2, ylabel= $3]
            
            \addplot[blue, smooth] table[x=Frequence, y=Gain, col sep=space] {./data/$4};
        \end{axis}
    \end{tikzpicture}
\end{figure}
$0
endsnippet

snippet `(?<=^\s*)2fig` "Figure environment" bA

\begin{figure}[ht!]
	\begin{floatrow}
		\ffigbox{
			\includegraphics[height=0.35\textheight]{$2}
			\caption{$1}
		}

		\ffigbox{
			\includegraphics[height=0.35\textheight]{$4}
			\caption{$3}
		}

	\end{floatrow}
\end{figure}
$0
endsnippet


snippet `(?<=^\s*)tikz` "Tikz environment" bA
 \begin{figure}[ht!]
    \centering
    \begin{tikzpicture}
        $1
    \end{tikzpicture}
    \caption{${2:${VISUAL}}}
\end{figure}
endsnippet

snippet `(?<=^\s*)enum` "Enumerate" bA
 \begin{enum}{-${1:15}pt}{-${2:15}pt}
    \item ${3:${VISUAL}}
\end{enum}$0
endsnippet


snippet `(?<=^\s*)items` "Itemize" bA
 \begin{items}{-${1:15}pt}{-${2:15}pt}
    \item ${3:${VISUAL}}
\end{items}$0
endsnippet


snippet `(^|\s)desc` "Description" b
 \begin{description}
    \item[$1] $0
\end{description}
endsnippet

snippet pac "Package" b
\usepackage[$2]{$1}$0
endsnippet

context math(context)   
snippet => "implies" Ai
\implies
endsnippet

context math(context)
snippet =< "implied by" Ai
\impliedby
endsnippet

context math(context)
snippet iff "iff" Ai
\iff
endsnippet


snippet `(^|\s)mk` "Math" wA
 $\ds{${1}}$ $0
endsnippet


snippet `(^|\s)nl` "Math" wA
 
\linecenter{$\ds{${1:${VISUAL}}}$}$0
endsnippet


snippet `(^|\s)nnl` "Math2" wA
 
\begin{equation*$1}
    \ds{${2:${VISUAL}}}
\end{equation*}$0
endsnippet


snippet ttt "code" w 
\texttt{$1}$0
endsnippet


snippet `(?<=^\s*)ali` "Align" bA
 \begin{align*}
    ${1:${VISUAL}}
\end{align*}
endsnippet


context math(context)
snippet // "Fraction" iA
\\frac{$1}{$2}$0
endsnippet

context math(context)
snippet ña "alpha" iA
\alpha
endsnippet

context math(context)
snippet ñb "beta" iA
\beta
endsnippet

context math(context)
snippet ñy "gamma" iA
\gamma
endsnippet

priority 100
context math(context)
snippet ññy "Gamma" iA
\Gamma
endsnippet

context math(context)
snippet ñe "epsilon" iA
\varepsilon
endsnippet

context math(context)
snippet ñn "eta" iA
\eta
endsnippet

context math(context)
snippet ño "theta" iA
\theta
endsnippet

context math(context)
snippet ñk "kappa" iA
\kappa
endsnippet

context math(context)
snippet ñl "lambda" iA
\lambda
endsnippet

priority 100
context math(context)
snippet ññl "Lambda" iA
\Lambda
endsnippet

context math(context)
snippet ñm "mu" iA
\mu
endsnippet

context math(context)
snippet ñv "nu" iA
\nu
endsnippet

context math(context)
snippet ñc "xi" iA
\xi
endsnippet

context math(context)
snippet ñr "rho" iA
\rho
endsnippet

context math(context)
snippet ñt "tau" iA
\tau
endsnippet

context math(context)
snippet ñd "delta" iA
\delta
endsnippet

priority 100
context math(context)
snippet ññd "Delta" iA
\Delta
endsnippet

context math(context)
snippet ñw "omega" iA
\omega
endsnippet

priority 100
context math(context)
snippet ñño "Omega" iA
\Omega
endsnippet

context math(context)
snippet ñf "phi" iA
\phi
endsnippet

context math(context)
snippet @f "varphi" iA
\varphi
endsnippet

context math(context)
snippet ñx "chi" iA
\chi
endsnippet

context math(context)
snippet / "Fraction" i
\frac{${VISUAL}}{$1}$0
endsnippet

context math(context)
snippet `((\d+)|(\d*)(\\)?([A-Za-z]+)((\^|_)(\{\d+\}|\d))*)/` "symbol frac" A
\frac{``rv = m[1]``}{$1}$0
endsnippet

context math(context)
snippet `^.*\)/` "Fraction with ()" A
``
    let str = m[0];
    str = str.slice(0, -1);
    let lastIndex = str.length - 1;

    let depth = 0;
    let i = str.length - 1;

    while (true) {
        if (str[i] == ')') depth += 1;
        if (str[i] == '(') depth -= 1;
        if (depth == 0) break;
        i -= 1;
    }

    let results = str.slice(0, i) + "\\frac{" + str.slice(i+1, -1) + "}";
    results += "{$1}$0";
    rv = results;
    ``
endsnippet

context math(context)
snippet `([A-Za-z])(\d)` "auto subscript" A
``rv = m[1]``_``rv = m[2]``
endsnippet


context math(context)
snippet `([A-Za-z])_(\d\d)` "auto subscript2" A
``rv = m[1]``_``{rv = m[2]}``
endsnippet



priority 1000
snippet math "mathematicablock" w
math $1 math$0
endsnippet

context math(context)
snippet == "equals" iA
&= $1 \\\\
endsnippet

context math(context)
snippet != "equals" iA
\neq 
endsnippet

context math(context)
snippet ceil "ceil" iA
\left\lceil $1 \right\rceil $0
endsnippet

context math(context)
snippet floor "floor" iA
\left\lfloor $1 \right\rfloor$0
endsnippet

context math(context)
snippet pmat "pmat" iA
\begin{pmatrix}
    $1 
\end{pmatrix} 
$0
endsnippet

context math(context)
snippet bmat "bmat" iA
\begin{bmatrix}
    $1 
\end{bmatrix} 
$0
endsnippet

context math(context)
snippet (()) "left( right)" iA
\left( ${1:${VISUAL}} \right) $0
endsnippet

context math(context)
snippet lr| "left| right|" iA
\left| ${1:${VISUAL}} \right| $0
endsnippet

context math(context)
snippet lr{ "left\{ right\}" iA
\left\\{ ${1:${VISUAL}} \right\\} $0
endsnippet

context math(context)
snippet lrb "left\{ right\}" i
\left\\{ ${1:${VISUAL}} \right\\} $0
endsnippet

context math(context)
snippet lr[ "left[ right]" iA
\left[ ${1:${VISUAL}} \right] $0
endsnippet

context math(context)
snippet lra "leftangle rightangle" iA
\left< ${1:${VISUAL}} \right> $0
endsnippet

context math(context)
snippet conj "conjugate" iA
\overline{$1}$0
endsnippet

context math(context)
snippet sum "sum" wA
\sum_{n=${1:1}}^{${2:\infty}} ${3:a_n z^n}
endsnippet

context math(context)
snippet taylor "taylor" wA
\sum_{${1:k}=${2:0}}^{${3:\infty}} ${4:c_$1} (x-a)^$1 $0
endsnippet

context math(context)
snippet lim "limit" wA
\lim_{${1:n} \to ${2:\infty}} 
endsnippet

context math(context)
snippet limsup "limsup" w
\limsup_{${1:n} \to ${2:\infty}} 
endsnippet

context math(context)
snippet prod "product" A
\prod_{${1:n=${2:1}}}^{${3:\infty}} ${4:${VISUAL}} $0
endsnippet

context math(context)
snippet `partt` "partial deriv" A
\frac{\partial $1}{\partial $2} $0
endsnippet

context math(context)
snippet `derivv` "auto deriv" A
\frac{d $1}{d $2} $0
endsnippet

context math(context)
snippet `deriv(\d)` "auto deriv" A
\frac{d^{``rv =m[1]``} $1}{d $2^{``rv=m[1]``}} $0
endsnippet

priority 100
context math(context)
snippet `part(\d)` "auto partial deriv" A
\frac{\partial^{``rv =m[1]``} ${1:V}}{\partial ${2:x}^{``rv=m[1]``}} $0
endsnippet


context math(context)
snippet sq "\sqrt{}" iA
\sqrt{${1:${VISUAL}}} $0
endsnippet

context math(context)
snippet sr "^2" iA
^2
endsnippet

context math(context)
snippet cb "^3" iA
^3
endsnippet

context math(context)
snippet td "to the ... power" iA
^{$1}$0
endsnippet

context math(context)
snippet __ "subscript" iA
_{$1}$0
endsnippet

context math(context)
snippet oo "\infty" iA
\infty
endsnippet

snippet rij "mrij" i
(${1:x}_${2:n})_{${3:$2}\\in${4:\\N}}$0
endsnippet

context math(context)
snippet <= "leq" iA
\le 
endsnippet

context math(context)
snippet >= "geq" iA
\ge 
endsnippet

context math(context)
snippet EE "geq" iA
\exists 
endsnippet

context math(context)
snippet AA "forall" iA
\forall 
endsnippet

context math(context)
snippet R0+ "R0+" iA
\\R_0^+
endsnippet


snippet `(?<=^\s*)plot` "Plot" w
\begin{figure}[$1]
    \centering
    \begin{tikzpicture}
        \begin{axis}[
            xmin= ${2:-10}, xmax= ${3:10},
            ymin= ${4:-10}, ymax = ${5:10},
            axis lines = middle,
        ]
            \addplot[domain=$2:$3, samples=${6:100}]{$7};
        \end{axis}
    \end{tikzpicture}
    \caption{$8}
    \label{${9:$8}}
\end{figure}
endsnippet


snippet nn "Tikz node" w
\node[$5] (${1/[^0-9a-zA-Z]//g}${2}) ${3:at (${4:0,0}) }{$${1}$};
$0
endsnippet

context math(context)
snippet mcal "mathcal" iA
\mathcal{$1}$0
endsnippet

context math(context)
snippet nabla "nabla" iA
\nabla 
endsnippet

context math(context)
snippet ** "cdot" iA
\cdot 
endsnippet

context math(context)
snippet norm "norm" iA
\|$1\|$0
endsnippet

context math(context)
snippet `(?<!\\)(sin|cos|arccot|cot|csc|ln|log|exp|star|perp)` "ln" wA
\\``rv = m[1]``
endsnippet


context math(context)
snippet `(?<!\\)int` "integral" wA
\int\limits_{$1}^{$2} ${3:${VISUAL}} \,d${4:x} $0
endsnippet


context math(context)
snippet iint "double integral" wA
\iint\limits_{$1}^{$2} ${3:${VISUAL}} \,d${4:x} $0
endsnippet


context math(context)
snippet iiint "triple integral" wA
\iiint\limits_{$1}^{$2} ${3:${VISUAL}} \,d${4:x} $0
endsnippet


context math(context)
snippet oint "closed integral" wA
\oint\limits_{$1}^{$2} ${3:${VISUAL}} \,d${4:x} $0
endsnippet


context math(context)
snippet oiint "closed double integral" wA
\oiint\limits_{$1}^{$2} ${3:${VISUAL}} \,d${4:x} $0
endsnippet


context math(context)
snippet oiiint "closed triple integral" wA
\oiiint\limits_{$1}^{$2} ${3:${VISUAL}} \,d${4:x} $0
endsnippet

priority 300
context math(context)
snippet vec "vector" wA
\vv{${1:${VISUAL}}}$0
endsnippet


snippet `ml` "math simple" bA
\$$1\$$0
endsnippet


context math(context)
snippet `(?<!\\)(arcsin|arccos|arctan|arccot|arccsc|arcsec|pi|zeta)` "ln" wA
\\``rv = m[1]``
endsnippet


priority 100
context math(context)
snippet -> "to" iA
\to 
endsnippet

priority 200
context math(context)
snippet <-> "leftrightarrow" iA
\leftrightarrow
endsnippet

context math(context)
snippet !> "mapsto" iA
\mapsto 
endsnippet

context math(context)
snippet invs "inverse" iA
^{-1}
endsnippet

context math(context)
snippet compl "complement" iA
^{c}
endsnippet

context math(context)
snippet \\\ "setminus" iA
\setminus
endsnippet

context math(context)
snippet >> ">>" iA
\gg
endsnippet

context math(context)
snippet << "<<" iA
\ll
endsnippet

snippet ~~ "~" iA
\sim 
endsnippet

context math(context)
snippet set "set" wA
\\{$1\\} $0
endsnippet

context math(context)
snippet mid "mid" iA
 \mid $1 \mid $0
endsnippet

context math(context)
snippet || "bigmid" iA
 \lvert $1 \rvert $0
endsnippet


context math(context)
snippet notin "not in " iA
\not\in 
endsnippet

context math(context)
snippet inn "in " iA
\in 
endsnippet

context math(context)
snippet #N "n" iA
\N
endsnippet

context math(context)
snippet Nn "cap" iA
\cap 
endsnippet

context math(context)
snippet UU "cup" iA
\cup 
endsnippet

context math(context)
snippet uuu "bigcup" iA
\bigcup_{${1:i \in ${2: I}}} $0
endsnippet

context math(context)
snippet nnn "bigcap" iA
\bigcap_{${1:i \in ${2: I}}} $0
endsnippet

context math(context)
snippet OO "emptyset" iA
\O
endsnippet

context math(context)
snippet RR "real" iA
\R
endsnippet

context math(context)
snippet NN "real" iA
\N
endsnippet

context math(context)
snippet QQ "Q" iA
\Q
endsnippet

context math(context)
snippet ZZ "Z" iA
\Z
endsnippet

context math(context)
snippet <! "normal" iA
\triangleleft 
endsnippet

context math(context)
snippet <> "hokje" iA
\diamond 
endsnippet


context math(context)
snippet `(?<!i)sts` "text subscript" iA
_\text{$1} $0
endsnippet

context math(context)
snippet te "text" iA
\text{$1}$0
endsnippet

context math(context)
snippet case "cases" wA
\begin{cases}
    $1
\end{cases}
endsnippet

context math(context)
snippet xx "cross" iA
\times $0 
endsnippet


snippet `(^|\s)SI` "SI" iA
 \SI{$1}{$2}
endsnippet


snippet `(^|\s)bigfun` "Big function" iA
\begin{align*}
    $1: $2 &\longrightarrow $3 \\\\
    $4 &\longmapsto $1($4) = $0
\end{align*}
endsnippet


snippet `(^|\s)fn` "Small function" iA
 $$1: $2 \longrightarrow $3$, $$4 \longmapsto $5$$0 
endsnippet


snippet `(^|\s)cvec` "column vector" iA
\begin{pmatrix} ${1:x}_${2:1}\\\\ \vdots\\\\ $1_${2:n} \end{pmatrix}
endsnippet


snippet `(?<=^\s*)dent` "Calls dent" bA
\begin{dent}{$1}
    ${2:${VISUAL}}
\end{dent}$0
endsnippet


snippet `(?<=^\s*)sec` "New section" bA
    \section{${1:${VISUAL}}}
endsnippet


snippet `(?<=^\s*)ssec` "New subsection" bA
    \subsection{${1:${VISUAL}}}
endsnippet


snippet `(?<=^\s*)sssec` "New subsubsection" bA
    \subsubsection{${1:${VISUAL}}}
endsnippet


snippet `(?<=^\s*)chap` "New section" bA
    \chapter{${1:${VISUAL}}}
endsnippet

priority 10
context math(context)
snippet bar "bar" iA
\overline{$1}$0
endsnippet

priority 100
context math(context)
snippet `([a-zA-Z])bar` "bar" iA
\overline{`!p snip.rv=match.group(1)`}
endsnippet

priority 10
context math(context)
snippet hat "hat" iA
\hat{$1}$0
endsnippet

priority 100
context math(context)
snippet `([a-zA-Z])hat` "hat" iA
\hat{`!p snip.rv=match.group(1)`}
endsnippet

snippet letw "let omega" iA
Let $\Omega \subset \C$ be open.
endsnippet

context math(context)
snippet HH "H" iA
\mathbb{H}
endsnippet

context math(context)
snippet DD "D" iA
\mathbb{D}
endsnippet

context math(context)
snippet ç "matrix next" iA
 & 
endsnippet

context math(context)
snippet º "matrix break" iA
  \\\\

endsnippet

context math(context)
snippet ker "ker" iA
\ker
endsnippet

context math(context)
snippet `((\d+)|(\d*)(\\)?([A-Za-z]+)((\^|_)(\{\d+\}|\d))*)overs` "symbol frac" A
\overset{$1}{``rv = m[1]``}$0
endsnippet

context math(context)
snippet overs "over" iA
\overset{$1}{$2}$0
endsnippet

context math(context)
snippet `((\d+)|(\d*)(\\)?([A-Za-z]+)((\^|_)(\{\d+\}|\d))*)unders` "symbol frac" A
\underset{$1}{``rv = m[1]``}$0
endsnippet

context math(context)
snippet unders "under" iA
\underset{$1}{$2}$0
endsnippet

context math(context)
snippet `((\d+)|(\d*)(\\)?([A-Za-z]+)((\^|_)(\{\d+\}|\d))*)overb` "symbol frac" A
\overbrace{``rv = m[1]``}^{$1}$0
endsnippet

context math(context)
snippet overb "overbrace" iA
\overbrace{$1}^{$2}$0
endsnippet

context math(context)
snippet `((\d+)|(\d*)(\\)?([A-Za-z]+)((\^|_)(\{\d+\}|\d))*)underb` "symbol frac" A
\underbrace{``rv = m[1]``}_{$1}$0
endsnippet

context math(context)
snippet underb "underbrace" iA
\underbrace{$1}_{$2}$0
endsnippet

priority 200
context math(context)
snippet --> "longrightarrow" iA
\longrightarrow
endsnippet

priority 200
context math(context)
snippet !-> "longmapsto" iA
\longmapsto
endsnippet

